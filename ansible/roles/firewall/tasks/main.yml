---
# tasks file for firewall
- name: Install nftables
  ansible.builtin.apt:
    name: "nftables"
    state: present
    update_cache: yes

- name: Generate nftables Rules Shell Script
  ansible.builtin.template:
    src: "templates/nft-rules.sh.j2"
    dest: "/usr/local/bin/firewall-rules"
    mode: 0755
  register: generate_firewall_shell_script

- name: Check if Traffic Control Service Exists
  ansible.builtin.stat:
    path: "/etc/systemd/system/firewall.service"
  register: firewall_service_file

- name: Setup Systemd Service for Firewall Rules
  ansible.builtin.copy:
    src: "files/etc/systemd/system/firewall.service"
    dest: "/etc/systemd/system/firewall.service"
    owner: root
    group: root
    mode: 0644
  register: copy_firewall_service_file

- name: Create/Update MAC Addresses Whitelist
  ansible.builtin.template:
    src: "templates/mac_address_whitelist.json.j2"
    dest: "{{ FIREWALL_LAN_MAC_WHITELIST_FILE }}"
    mode: 0644
  when: FIREWALL_LAN_MAC_RESTRICTION_ENABLED

- name: Check if {{ FIREWALL_LOG_FILE }} Exists
  ansible.builtin.stat:
    path: "{{ FIREWALL_LOG_FILE }}"
  register: firewall_log_file_check

- name: Create {{ FIREWALL_LOG_FILE }}
  ansible.builtin.file:
    path: "{{ FIREWALL_LOG_FILE }}"
    state: touch
  register: log_file_created
  when: not firewall_log_file_check.stat.exists

- name: Configure rsyslog for Firewall Logs
  ansible.builtin.template:
    src: "templates/etc/rsyslog.d/firewall.conf.j2"
    dest: /etc/rsyslog.d/firewall.conf
    mode: 0644
  register: generate_rsyslog_firewall_config

- name: Configure Log Rotation for Firewall Logs
  ansible.builtin.copy:
    src: "files/etc/logrotate.d/firewall"
    dest: "/etc/logrotate.d/firewall"
    owner: root
    group: root
    mode: 0644

- name: Restart rsyslog
  ansible.builtin.systemd_service:
    name: "rsyslog"
    state: restarted
  when: generate_rsyslog_firewall_config.changed

- name: Start Firewall Service
  ansible.builtin.systemd_service:
    name: "firewall"
    enabled: yes
    daemon_reload: true
    state: started
  when: not firewall_service_file.stat.exists

- name: Restart Firewall Service
  ansible.builtin.systemd_service:
    name: "firewall"
    daemon_reload: true
    state: restarted
  when: (firewall_service_file.stat.exists and generate_firewall_shell_script.changed) or (firewall_service_file.stat.exists and copy_firewall_service_file.changed)
