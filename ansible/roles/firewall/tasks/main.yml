---
# tasks file for firewall
- name: Set DebConf for iptables-persistent
  ansible.builtin.debconf:
    name: iptables-persistent
    question: "{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype }}"
  with_items: "{{ FIREWALL_DEBCONF_PACKAGE_QUESTIONS }}"

- name: Install iptables-persistent
  ansible.builtin.apt:
    name: "iptables-persistent"
    state: present
    update_cache: yes

- name: Generate IPTables Rules Shell Script
  template:
    src: "templates/iptables-rules.sh.j2"
    dest: "/usr/local/bin/generate-iptables-rules.sh"
    mode: 0755
  register: generate_iptables_shell_script

- name: Run IPTables Rules Shell Script
  ansible.builtin.shell: "/usr/local/bin/generate-iptables-rules.sh"
  args:
    executable: "/bin/bash"
  when: generate_iptables_shell_script.changed

- name: Create/Update MAC Addresses Whitelist
  template:
    src: "templates/mac_address_whitelist.json.j2"
    dest: "{{ FIREWALL_LAN_MAC_WHITELIST_FILE }}"
    mode: 0644

- name: Check if {{ FIREWALL_LOG_FILE }} Exists
  ansible.builtin.stat:
    path: "{{ FIREWALL_LOG_FILE }}"
  register: iptables_log_file_check

- name: Create {{ FIREWALL_LOG_FILE }}
  ansible.builtin.file:
    path: "{{ FIREWALL_LOG_FILE }}"
    state: touch
  register: log_file_created
  when: not iptables_log_file_check.stat.exists

- name: Configure rsyslog for IPTables
  template:
    src: "templates/etc/rsyslog.d/iptables.conf.j2"
    dest: /etc/rsyslog.d/iptables.conf
    mode: 0644
  register: generate_rsyslog_iptables_config

- name: Restart rsyslog
  systemd:
    name: "rsyslog"
    state: restarted
  when: generate_rsyslog_iptables_config.changed

- name: Restart netfilter-persistent
  systemd:
    name: "netfilter-persistent"
    state: restarted
  when: generate_iptables_shell_script.changed
