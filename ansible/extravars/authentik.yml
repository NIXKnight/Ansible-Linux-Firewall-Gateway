---
AUTHENTIK_SERVICE_NAME: "fw-authentik"
AUTHENTIK_SERVICE_SYSTEMD_DESCRIPTION: "Firewall Authentication Service - Authentik"
AUTHENTIK_SERVICE_SYSTEMD_REQUIRES: "network-online.target docker.service fw-powerdns.service fw-data.service"
AUTHENTIK_SERVICE_SYSTEMD_AFTER: "network-online.target time-sync.target docker.service fw-powerdns.service fw-data.service"
AUTHENTIK_SERVICE_SYSTEMD_FILE: "/etc/systemd/system/{{ AUTHENTIK_SERVICE_NAME }}.service"
AUTHENTIK_SERVICE_IMAGES:
  authentik:
    name: "ghcr.io/goauthentik/server"
    tag: "2024.4.2"
AUTHENTIK_SERVICE_COMPOSE_PATH: "/etc/firewall-gw/docker-compose/authentik"
AUTHENTIK_IMAGE: "{{ AUTHENTIK_SERVICE_IMAGES.authentik.name }}:{{ AUTHENTIK_SERVICE_IMAGES.authentik.tag }}"
AUTHENTIK_POSTGRESQL_USERNAME: "authentik"
AUTHENTIK_POSTGRESQL_DB: "authentik"
AUTHENTIK_SERVICE_MANIFEST:
  dest: "{{ AUTHENTIK_SERVICE_COMPOSE_PATH }}/docker-compose.yml"
  content:
    services:
      server:
        image: "{{ AUTHENTIK_IMAGE }}"
        network_mode: host
        command: server
        environment:
          AUTHENTIK_REDIS__HOST: 127.0.0.1
          AUTHENTIK_POSTGRESQL__HOST: 127.0.0.1
          AUTHENTIK_POSTGRESQL__USER: "{{ AUTHENTIK_POSTGRESQL_USERNAME }}"
          AUTHENTIK_POSTGRESQL__NAME: "{{ AUTHENTIK_POSTGRESQL_DB }}"
          AUTHENTIK_POSTGRESQL__PASSWORD: "{{ AUTHENTIK_POSTGRESQL_PASSWORD }}"
          AUTHENTIK_SECRET_KEY: "{{ AUTHENTIK_SECRET_KEY }}"
          AUTHENTIK_BOOTSTRAP_EMAIL: "{{ AUTHENTIK_BOOTSTRAP_EMAIL }}"
          AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ AUTHENTIK_BOOTSTRAP_PASSWORD }}"
          AUTHENTIK_BOOTSTRAP_TOKEN: "{{ AUTHENTIK_BOOTSTRAP_TOKEN }}"
          AUTHENTIK_WEB__THREADS: 2
          AUTHENTIK_EMAIL__HOST: "{{ AUTHENTIK_EMAIL_HOST }}"
          AUTHENTIK_EMAIL__PORT: "{{ AUTHENTIK_EMAIL_PORT }}"
          AUTHENTIK_EMAIL__USERNAME: "{{ AUTHENTIK_EMAIL_USERNAME }}"
          AUTHENTIK_EMAIL__PASSWORD: "{{ AUTHENTIK_EMAIL_PASSWORD }}"
          AUTHENTIK_EMAIL__USE_TLS: "{{ AUTHENTIK_EMAIL_USE_TLS }}"
          AUTHENTIK_EMAIL__FROM: "{{ AUTHENTIK_EMAIL_FROM }}"
        volumes:
          - "media_data:/media"
          - "templates_data:/templates"
      worker:
        depends_on:
          - server
        image: "{{ AUTHENTIK_IMAGE }}"
        network_mode: host
        command: worker
        environment:
          AUTHENTIK_REDIS__HOST: 127.0.0.1
          AUTHENTIK_POSTGRESQL__HOST: 127.0.0.1
          AUTHENTIK_POSTGRESQL__USER: "{{ AUTHENTIK_POSTGRESQL_USERNAME }}"
          AUTHENTIK_POSTGRESQL__NAME: "{{ AUTHENTIK_POSTGRESQL_DB }}"
          AUTHENTIK_POSTGRESQL__PASSWORD: "{{ AUTHENTIK_POSTGRESQL_PASSWORD }}"
          AUTHENTIK_BOOTSTRAP_EMAIL: "{{ AUTHENTIK_BOOTSTRAP_EMAIL }}"
          AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ AUTHENTIK_BOOTSTRAP_PASSWORD }}"
          AUTHENTIK_BOOTSTRAP_TOKEN: "{{ AUTHENTIK_BOOTSTRAP_TOKEN }}"
          AUTHENTIK_SECRET_KEY: "{{ AUTHENTIK_SECRET_KEY }}"
          AUTHENTIK_WORKER__CONCURRENCY: 2
          AUTHENTIK_EMAIL__HOST: "{{ AUTHENTIK_EMAIL_HOST }}"
          AUTHENTIK_EMAIL__PORT: "{{ AUTHENTIK_EMAIL_PORT }}"
          AUTHENTIK_EMAIL__USERNAME: "{{ AUTHENTIK_EMAIL_USERNAME }}"
          AUTHENTIK_EMAIL__PASSWORD: "{{ AUTHENTIK_EMAIL_PASSWORD }}"
          AUTHENTIK_EMAIL__USE_TLS: "{{ AUTHENTIK_EMAIL_USE_TLS }}"
          AUTHENTIK_EMAIL__FROM: "{{ AUTHENTIK_EMAIL_FROM }}"
        user: root
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "media_data:/media"
          - "templates_data:/templates"
          - "certs_data:/certs"
    volumes:
      media_data:
        driver: local
      templates_data:
        driver: local
      certs_data:
        driver: local

AUTHENTIK_SERVER_URL: "https://auth.{{ ACME_DOMAIN_NAME }}"
AUTHENTIK_TOFU_MODULE_CONFIG_FILE_DEST: "/tmp/authentik_config.yaml"
AUTHENTIK_TOFU_PROJECT_PATH: "../terraform/modules/authentik"
AUTHENTIK_TOFU_STATE_DB_SCHEMA_NAME: "authentik"
AUTHENTIK_TOFU_ENV:
  AUTHENTIK_URL: "{{ AUTHENTIK_SERVER_URL }}"
  AUTHENTIK_TOKEN: "{{ AUTHENTIK_BOOTSTRAP_TOKEN }}"
  TF_VAR_authentik_config_file: "{{ AUTHENTIK_TOFU_MODULE_CONFIG_FILE_DEST }}"

# AUTHENTIK_TOFU_MODULE_CONFIG:
#   scope_mappings:
#     - name: "jenkins"
#       managed_list:
#         - "goauthentik.io/providers/oauth2/scope-email"
#         - "goauthentik.io/providers/oauth2/scope-openid"
#         - "goauthentik.io/providers/oauth2/scope-profile"
#   providers:
#     - name: "jenkins"
#       client_id: "jenkins"
#       client_secret: "jenkins"
#       property_mappings: "jenkins"
#       redirect_uris:
#         - "http://127.0.0.1:8080/securityRealm/finishLogin"
#   applications:
#     - name: "jenkins"
#       slug: "jenkins"
#       provider: "jenkins"
#   users:
#     - username: "sali"
#       name: "sali"
#       password: "password"
#   groups:
#     - name: "FirewallAdmin"
#       users:
#         - "sali"
